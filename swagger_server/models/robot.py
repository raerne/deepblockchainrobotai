# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.position import Position  # noqa: F401,E501
from swagger_server import util


class Robot(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, player: int=None, position: Position=None, energy: int=None, max_energy: int=None, health: int=None, shield: int=None, max_shield: int=None):  # noqa: E501
        """Robot - a model defined in Swagger

        :param player: The player of this Robot.  # noqa: E501
        :type player: int
        :param position: The position of this Robot.  # noqa: E501
        :type position: Position
        :param energy: The energy of this Robot.  # noqa: E501
        :type energy: int
        :param max_energy: The max_energy of this Robot.  # noqa: E501
        :type max_energy: int
        :param health: The health of this Robot.  # noqa: E501
        :type health: int
        :param shield: The shield of this Robot.  # noqa: E501
        :type shield: int
        :param max_shield: The max_shield of this Robot.  # noqa: E501
        :type max_shield: int
        """
        self.swagger_types = {
            'player': int,
            'position': Position,
            'energy': int,
            'max_energy': int,
            'health': int,
            'shield': int,
            'max_shield': int
        }

        self.attribute_map = {
            'player': 'player',
            'position': 'position',
            'energy': 'energy',
            'max_energy': 'maxEnergy',
            'health': 'health',
            'shield': 'shield',
            'max_shield': 'maxShield'
        }
        self._player = player
        self._position = position
        self._energy = energy
        self._max_energy = max_energy
        self._health = health
        self._shield = shield
        self._max_shield = max_shield

    @classmethod
    def from_dict(cls, dikt) -> 'Robot':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Robot of this Robot.  # noqa: E501
        :rtype: Robot
        """
        return util.deserialize_model(dikt, cls)

    @property
    def player(self) -> int:
        """Gets the player of this Robot.


        :return: The player of this Robot.
        :rtype: int
        """
        return self._player

    @player.setter
    def player(self, player: int):
        """Sets the player of this Robot.


        :param player: The player of this Robot.
        :type player: int
        """

        self._player = player

    @property
    def position(self) -> Position:
        """Gets the position of this Robot.


        :return: The position of this Robot.
        :rtype: Position
        """
        return self._position

    @position.setter
    def position(self, position: Position):
        """Sets the position of this Robot.


        :param position: The position of this Robot.
        :type position: Position
        """

        self._position = position

    @property
    def energy(self) -> int:
        """Gets the energy of this Robot.


        :return: The energy of this Robot.
        :rtype: int
        """
        return self._energy

    @energy.setter
    def energy(self, energy: int):
        """Sets the energy of this Robot.


        :param energy: The energy of this Robot.
        :type energy: int
        """

        self._energy = energy

    @property
    def max_energy(self) -> int:
        """Gets the max_energy of this Robot.


        :return: The max_energy of this Robot.
        :rtype: int
        """
        return self._max_energy

    @max_energy.setter
    def max_energy(self, max_energy: int):
        """Sets the max_energy of this Robot.


        :param max_energy: The max_energy of this Robot.
        :type max_energy: int
        """

        self._max_energy = max_energy

    @property
    def health(self) -> int:
        """Gets the health of this Robot.


        :return: The health of this Robot.
        :rtype: int
        """
        return self._health

    @health.setter
    def health(self, health: int):
        """Sets the health of this Robot.


        :param health: The health of this Robot.
        :type health: int
        """

        self._health = health

    @property
    def shield(self) -> int:
        """Gets the shield of this Robot.


        :return: The shield of this Robot.
        :rtype: int
        """
        return self._shield

    @shield.setter
    def shield(self, shield: int):
        """Sets the shield of this Robot.


        :param shield: The shield of this Robot.
        :type shield: int
        """

        self._shield = shield

    @property
    def max_shield(self) -> int:
        """Gets the max_shield of this Robot.


        :return: The max_shield of this Robot.
        :rtype: int
        """
        return self._max_shield

    @max_shield.setter
    def max_shield(self, max_shield: int):
        """Sets the max_shield of this Robot.


        :param max_shield: The max_shield of this Robot.
        :type max_shield: int
        """

        self._max_shield = max_shield
